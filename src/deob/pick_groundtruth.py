import random
import utils


class GroundTruth:
	def __init__(self, basedir = '/space/webcrawl-malware/data/TempData/LOGs/'):
		self.basedir = basedir

	def saveList(self, content, filename):
		print "Saving list to {0}......".format(filename)
		outf = open(filename, 'w')
		for sublist in content:
			outf.write('\n'.join(sublist) + '\n')
		outf.close()

	def cpSampleList(self, sampleList, indir, outdir):
		utils.checkandaskdir(outdir)
		inf = open(sampleList, 'r')
		for line in inf:
			if line == '\n':
				continue
			dirname = line[:-1]
			print 'Processing {0}.............'.format(dirname)
			cpcmd = 'cp -r ' + indir + dirname + ' ' + outdir
			commands.getoutput(cpcmd)

	def getFilenameForClass(self, classname, count):
		# Handle invalid urls here

		# Randomly select #count urls
		groundTruthPath = '../../data/JSAdd2Tree/'
		filenames = utils.lsresult("-d {0}/{1}*".format(groundTruthPath, classname))
		random.shuffle(filenames)
		return filenames[:count]

	def pickGroundTruth(self, malClassList, numPerClass=1000, includeBenign=True):
		# The benign class is included by default
		# The format for malClassList is:
		# type,label,totalCount
		#
		# @type, name of a malicious class
		# @label, for example, M123, a string to identify type
		# @totalCount, availble number of urls for this class
		allClasses = list()
		allFilenames = list()
		toUseCount = dict()
		for line in open(malClassList, 'r'):
			line = line.split(',')
			totalCount = int(line[2])
			toUseCount[line[0]] = min(totalCount, numPerClass)
			allClasses.append(line[0])

		# Add benign classes
		if includeBenign:
			# Assuming there are at least numPerClass Benign ones there
			label = 'B1'
			allClasses.append(label)
			toUseCount[label] = numPerClass
		# Traverse classes and select samples
		for label in allClasses:
			# Get toUseCount for each class.
			# Handle invalid urls here.
			allFilenames.append(self.getFilenameForClass(label, toUseCount[label]))

		sampleList = 'samplelist'
		sampleList = self.basedir + sampleList
		self.saveList(allFilenames, sampleList)
		self.cpSampleList(sampleList)


if __name__ == '__main__':
	gt = GroundTruth()
	# gt = GroundTruth('/home/ruian/chromium/webcrawl-malware/data/TempData/LOGs/')
	gt.pickGroundTruth(malClassList="/space/webcrawl-malware/data/TempData/URLs/top20.malurl.stats")
	# gt.pickGroundTruth(malClassList="/home/ruian/chromium/webcrawl-malware/data/TempData/URLs/top20.malurl.stats")

